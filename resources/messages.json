{
  "app.common.name": "toolbox (version {{.Version}})",
  "app.common.license": "Licensed under MIT License. See https://github.com/watermint/toolbox for more detail",
  "app.common.copyright": "Copyright Â© 2016-2019 Takayuki Okazaki",
  "app.common.flag.proxy": "HTTP/HTTPS proxy (hostname:port)",
  "app.common.flag.work": "Work directory (default: %s)",
  "app.common.flag.quiet": "Quiet mode",
  "app.common.flag.alias": "Alias for account/team",
  "app.common.flag.secure": "Do not store tokens into a file",
  "app.common.flag.lang": "Display language (specify with BCP47 format, like `en` or `ja-JP`)",
  "app.common.diag.network.err.unreachable": "Network unreachable to `{{.Url}}`.\nPlease ensure your network connection or proxy configuration.\nPlease specify `-proxy` option if your machine is under proxy or firewall.\n\nError:\n{{.Error}}",
  "auth.basic.oauth_seq1": "1. Visit the URL for the auth dialog:\n\n{{.Url}}\n\n2. Click 'Allow' (you might have to login first):\n3. Copy the authorisation code:",
  "auth.basic.oauth_seq2": "Enter the authorisation code",
  "auth.basic.generated_token1": "1. Visit the MyApp page (you might have to login first):\n\nhttps://www.dropbox.com/developers/apps\n\n2. Proceed with \"Create App\"\n3. Choose \"{{.API}}\"\n4. Choose \"{{.TypeOfAccess}}\"\n5. Enter name of your app\n6. Proceed with \"Create App\"\n7. Hit \"Generate\" button near \"Generated access token\"\n8. Copy generated token\n",
  "auth.basic.generated_token2": "Enter the generated token:",
  "auth.basic.user_cancelled": "User cancelled operation",
  "auth.basic.failed": "Authentication failed",
  "auth.basic.verify.failed": "Unable to verify token, or invalid token. Please retry",
  "cmd.common.base.usage.head": "Usage:",
  "cmd.common.base.usage.default": "{{.Command}} [Options]",
  "cmd.common.group.usage.head": "{{.Command}} COMMAND\n\nAvailable commands:",
  "cmd.common.group.usage.tail": "Run '{{.Command}} COMMAND help' for more information on a command.",
  "cmd.common.group.usage.options": "Available options:",
  "cmd.group.desc": "Dropbox Business group management",
  "cmd.group.list.desc": "List groups",
  "cmd.group.member.desc": "Dropbox Business Group member management",
  "cmd.group.member.list.desc": "List group members",
  "cmd.member.detach.desc": "Convert account into Dropbox Basic",
  "cmd.member.detach.failure": "Unable to detach user; Email:{{.Email}}, Reason:{{.Reason}}",
  "cmd.member.detach.success": "User detached; Email:{{.Email}}",
  "cmd.member.detach.progress": "Detaching account; Email:{{.Email}}",
  "cmd.member.invite.desc": "Invite members",
  "cmd.member.invite.flag.silent": "Silent provisioning",
  "cmd.member.invite.failure_exit": "Terminate invitation due to error",
  "cmd.member.list.desc": "List members",
  "cmd.member.list.flag.include_removed": "Include removed members",
  "cmd.member.desc": "Dropbox Business member management",
  "cmd.member.provision.flag.csv": "CSV filename",
  "cmd.member.provision.usage": "{{.Command}} -csv MEMBER_FILENAME\n{{.Command}} member_email...",
  "cmd.member.provision.err.nodata": "Please specify input csv, or specify email addresses",
  "cmd.member.provision.err.open_file": "Unable to open file: {{.File}}",
  "cmd.member.provision.err.cant_read": "Unable to read CSV file: {{.File}}",
  "cmd.member.provision.err.no_row": "No column found in the row. Skip",
  "cmd.member.remove.desc": "Remove the member from the team",
  "cmd.member.remove.flag.keep_account": "Convert account into Dropbox Basic",
  "cmd.member.remove.flag.wipe_data": "Wipe data",
  "cmd.member.remove.failure": "Unable to remove user; Email:{{.Email}}, Reason:{{.Reason}}",
  "cmd.member.remove.success": "User removed; Email:{{.Email}}",
  "cmd.member.remove.progress": "Removing account; Email:{{.Email}}",
  "cmd.member.sync.desc": "Sync member information with provided csv",
  "cmd.member.sync.flag.silent": "Silent provisioning",
  "cmd.member.sync.flag.progress.update": "Updating member; TeamMemberId:{{.TeamMemberId}}, Email:{{.CurrentEmail}} => {{.NewEmail}}, GivenName:{{.GivenName}}, Surname:{{.Surname}}",
  "cmd.team.audit.desc": "Dropbox Business team audit",
  "cmd.team.audit.events.desc": "Export activity logs",
  "cmd.team.audit.events.flag.account_id": "Return only events with this account",
  "cmd.team.audit.sharing.desc": "Export all sharing information across team",
  "cmd.team.audit.sharing.flag.expand_group": "Expand group into members",
  "cmd.team.audit.sharing.progress.identify_admin": "Identify admin user",
  "cmd.team.audit.sharing.progress.do_as_admin": "Execute scan as admin; Email:{{.Email}}",
  "cmd.team.audit.sharing.progress.shared_link": "Scanning Shared links",
  "cmd.team.audit.sharing.progress.team_info": "Scanning Team info",
  "cmd.team.audit.sharing.progress.team_feature": "Scanning Team feature",
  "cmd.team.audit.sharing.progress.members": "Scanning Team members",
  "cmd.team.audit.sharing.progress.groups": "Scanning team groups",
  "cmd.team.audit.sharing.progress.group_members": "Scanning team group members",
  "cmd.team.audit.sharing.progress.namespace": "Scanning namespaces",
  "cmd.team.audit.sharing.progress.expand_group": "Preparing for `-expand-group`",
  "cmd.team.audit.sharing.progress.namespace_members": "Scanning namespace members",
  "cmd.team.audit.sharing.progress.namespace_file": "Scanning namespace files",
  "cmd.team.audit.sharing.progress.folder": "Scanning folder; Type:{{.Type}}, NamespaceId:{{.NamespaceId}}, Name:{{.Name}}",
  "cmd.team.audit.sharing.err.fail_prepare_expand_group": "Unable to list group members",
  "cmd.team.audit.sharing.err.fail_expand_group": "Could not expand group; GroupId:{{.GroupId}}, Name:{{.GroupName}}",
  "cmd.team.audit.sharing.err.unable_to_acquire_sharing_info": "Unable to acquire sharing information; NamespaceId:{{.NamespaceId}}, NamespaceOwnerId:{{.NamespaceOwnerId}}, FileId:{{.FileId}}, FilePath:{{.FilePath}}",
  "cmd.team.device.desc": "Dropbox Business device management",
  "cmd.team.device.list.desc": "List devices or web sessions of the team",
  "cmd.team.device.list.flag.device": "Device type (web|desktop|mobile|all)",
  "cmd.team.device.list.err.device_type": "Invalid device type. Please specify device type",
  "cmd.team.device.unlink.desc": "Unlink device",
  "cmd.team.device.unlink.usage": "unlink command use JSON report of `team device list` command\n\n{{.Command}} team device list -device (mobile|web|desktop) | {{.Command}} -stdin\n{{.Command}} -file filename.json",
  "cmd.team.device.unlink.flag.stdin": "Read data from STDIN",
  "cmd.team.device.unlink.flag.file": "Read data from a file. Please specify path to the file.",
  "cmd.team.device.unlink.flag.delete_on_unlink": "Whether to delete all files of the account (this is possible only if supported by the desktop client and will be made the next time the client access the account)",
  "cmd.team.device.unlink.err.specify_file": "Please specify data location by `-stdin` or `-file`",
  "cmd.team.device.unlink.err.open_file": "Unable to open file: {{.File}}",
  "cmd.team.device.unlink.progress.record": "Trying to unlink; Type:{{.Tag}}, TeamMemberId:{{.TeamMemberId}}, SessionId:{{.SessionId}}",
  "cmd.team.linkedapp.desc": "Dropbox Business linked API app management",
  "cmd.team.linkedapp.list.desc": "List all applications linked to the team members' accounts",
  "cmd.team.linkedapp.list.flag.with_email": "Export report with team member email",
  "cmd.team.namespace.file.desc": "Team namespace file management",
  "cmd.team.namespace.file.list.desc": "List files/folders in all namespaces of the team",
  "cmd.team.namespace.file.list.flag.include_deleted": "Include deleted folders/files",
  "cmd.team.namespace.file.list.flag.include_media_info": "Include media info (metadata of photo and video)",
  "cmd.team.namespace.file.list.flag.include_team_folder": "Include team folders",
  "cmd.team.namespace.file.list.flag.include_shared_folder": "Include shared folders",
  "cmd.team.namespace.file.list.flag.include_app_folder": "Include app folders",
  "cmd.team.namespace.file.list.flag.include_member_folder": "Include team member folders",
  "cmd.team.namespace.file.list.progress.scan_folder": "Scanning folder; Type:{{.Type}}, Id:{{.Id}}, Name:{{.Name}}",
  "cmd.team.namespace.file.size.desc": "Calculate size of namespaces",
  "cmd.team.namespace.file.size.flag.include_team_folder": "Include team folders",
  "cmd.team.namespace.file.size.flag.include_shared_folder": "Include shared folders",
  "cmd.team.namespace.file.size.flag.include_app_folder": "Include app folders",
  "cmd.team.namespace.file.size.flag.include_member_folder": "Include team member folders",
  "cmd.team.namespace.file.size.flag.cache": "Use cached information, or create cache if not exist",
  "cmd.team.namespace.file.size.flag.depth": "Depth directories deep",
  "cmd.team.namespace.member.list.desc": "List all namespace members of the team",
  "cmd.team.namespace.member.list.flag.expand_group": "Expand group into members",
  "cmd.team.namespace.member.list.err.fail_expand_group": "Unable to list group members",
  "cmd.team.namespace.member.list.err.cant_expand": "Could not expand group; GroupId:{{.Id}}, Name:{{.Name}}",
  "cmd.team.namespace.member.desc": "Team namespace member management",
  "cmd.team.namespace.list.desc": "List all namespaces of the team",
  "cmd.team.namespace.desc": "Team namespace management",
  "cmd.team.sharedlink.update.expire.desc": "Update all shared link expire date of team members' accounts",
  "cmd.team.sharedlink.update.expire.flag.days": "Update and overwrite expiration date",
  "cmd.team.sharedlink.update.expire.err.days_required": "Please specify expiration days",
  "cmd.team.sharedlink.update.desc": "Update shared link",
  "cmd.team.sharedlink.list.desc": "List all shared links of the team members' accounts",
  "cmd.team.sharedlink.desc": "Member shared link management",
  "cmd.team.teamfolder.file.desc": "Team team folder file management",
  "cmd.team.teamfolder.file.list.desc": "List files/folders in all team folders of the team",
  "cmd.team.teamfolder.file.list.flag.include_deleted": "Include deleted folders/files",
  "cmd.team.teamfolder.file.list.flag.include_media_info": "Include media info (metadata of photo and video)",
  "cmd.team.teamfolder.file.list.progress.scan": "Scanning team folder; Id:{{.Id}}, Name:{{.Name}}",
  "cmd.team.teamfolder.list.desc": "List all team folder of the team",
  "cmd.team.teamfolder.size.desc": "Calculate size of team folder",
  "cmd.team.teamfolder.size.flag.depth": "Depth directories deep",
  "cmd.team.teamfolder.size.flag.cache": "Use cached information, or create cache if not exist",
  "cmd.team.teamfolder.mirror.desc": "Mirror team folders into another team",
  "cmd.team.teamfolder.mirror.flag.src_account": "Account alias for the current content owner team",
  "cmd.team.teamfolder.mirror.flag.dst_account": "Account alias for destination team",
  "cmd.team.teamfolder.mirror.flag.verify": "Verify files/folders after finish mirroring",
  "cmd.team.teamfolder.mirror.flag.all": "Mirror all team folders",
  "cmd.team.teamfolder.mirror.err.not_enough_params": "Params `-src-account` and `-dest-account` are required. Please specify options",
  "cmd.team.teamfolder.mirror.err.not_enough_arguments": "No team folders are specified. Please provide team folder names as an argument, or specify `-all` option.",
  "cmd.team.teamfolder.mirror.err.team_folder_not_found": "Team folder `{{.Name}}` not found.",
  "cmd.team.teamfolder.mirror.err.same_team": "Specified teams are same.",
  "cmd.team.teamfolder.mirror.prompt.ask_src_file_account_auth": "Preparing \"source account\" ({{.Alias}} File access token; Please proceed authentication with the \"source account\" if you asked authentication.",
  "cmd.team.teamfolder.mirror.prompt.ask_src_mgmt_account_auth": "Preparing \"source account\" ({{.Alias}} Management token; Please proceed authentication with the \"source account\" if you asked authentication.",
  "cmd.team.teamfolder.mirror.prompt.ask_dst_file_account_auth": "Preparing \"destination account\" ({{.Alias}} File access token; Please proceed authentication with the \"destination account\" if you asked authentication.",
  "cmd.team.teamfolder.mirror.prompt.ask_dst_mgmt_account_auth": "Preparing \"destination account\" ({{.Alias}} Management token; Please proceed authentication with the \"destination account\" if you asked authentication.",
  "cmd.team.teamfolder.mirror.prompt.skipped_archived_folder": "Skip archived or archiving team folder `{{.Name}}` ",
  "cmd.team.teamfolder.mirror.progress.identified_from_team_admin": "Team admin of \"from account\" {{.Alias}}: TeamMemberId:{{.TeamMemberId}}, Email:{{.Email}}",
  "cmd.team.teamfolder.mirror.progress.identified_to_team_admin": "Team admin of \"to account\" {{.Alias}}: TeamMemberId:{{.TeamMemberId}}, Email:{{.Email}}",
  "cmd.team.teamfolder.mirror.progress.create_tmp_group": "Creating temporary group in the team `{{.Alias}}`. This group will be removed after mirroring.",
  "cmd.team.teamfolder.mirror.progress.tmp_group_created": "Temporary group {{.Name}} created in the team `{{.Alias}}`.",
  "cmd.team.teamfolder.mirror.progress.add_admin_to_tmp_group": "Adding admin user `{{.Email}}` into temporary group",
  "cmd.team.teamfolder.mirror.progress.mirroring_team_folder": "Mirroring team folder: {{.Name}}",
  "cmd.team.teamfolder.mirror.progress.team_folder_created_on_to_team": "Team folder `{{.Name}}` created in the team `{{.Alias}}`",
  "cmd.team.teamfolder.mirror.progress.tmp_group_removed": "Temporary group removed",
  "cmd.team.teamfolder.desc": "Team folder management",
  "cmd.team.feature.desc": "List team feature values",
  "cmd.team.info.desc": "Team info",
  "cmd.team.desc": "Dropbox Business Team management",
  "cmd.file.desc": "File operation",
  "cmd.file.metadata.desc": "Report metadata for a file or folder",
  "cmd.file.metadata.usage": "{{.Command}} path...",
  "cmd.file.mirror.desc": "Mirror files/folders into another account",
  "cmd.file.mirror.flag.src_account": "Account alias for the current content owner",
  "cmd.file.mirror.flag.dst_account": "Destination account alias",
  "cmd.file.mirror.flag.src_path": "Target file/folder path in the current content owner folder structure",
  "cmd.file.mirror.flag.dst_path": "Destination file/folder path in the destination account",
  "cmd.file.mirror.flag.verify": "Verify files/folders after finish mirroring",
  "cmd.file.mirror.err.not_enough_params": "Params `-src-account`, `-dest-account`, `-src-path`, and `-dest-path` are required. Please specify those params",
  "cmd.file.mirror.prompt.ask_src_account_auth": "Preparing \"source account\"; Please proceed authentication with the \"source account\" if you asked authentication.",
  "cmd.file.mirror.prompt.ask_dst_account_auth": "Preparing \"destination account\"; Please proceed authentication with the \"destination account\" if you asked authentication.",
  "cmd.file.compare.desc": "Compare files between two accounts",
  "cmd.file.compare.flag.left_account": "Account alias for compare (Left)",
  "cmd.file.compare.flag.right_account": "Account alias for compare (Right)",
  "cmd.file.compare.flag.left_path": "Path in the account (Left)",
  "cmd.file.compare.flag.right_path": "Path in the account (Right)",
  "cmd.file.compare.err.not_enough_params": "Params `-left-account`, `-right-account`, `-left-path`, and `-right-path` are required. Please specify those params",
  "cmd.file.compare.prompt.ask_left_account_auth": "Preparing \"left account\"; Please proceed authentication with the \"left account\" if you asked authentication.",
  "cmd.file.compare.prompt.ask_right_account_auth": "Preparing \"right account\"; Please proceed authentication with the \"right account\" if you asked authentication.",
  "dbx_file.copy_ref.mirror.progress.file.done": "File mirrored: `{{.FromAccount}}:ns:{{.FromNS}}:{{.FromPath}}` -> `{{.ToAccount}}:ns:{{.ToNS}}:{{.ToPath}}`",
  "dbx_file.copy_ref.mirror.progress.folder.done": "Folder mirrored: `{{.FromAccount}}:{{.FromNS}}:{{.FromPath}}` -> `{{.ToAccount}}:ns:{{.ToNS}}:{{.ToPath}}`",
  "dbx_file.copy_ref.mirror.progress.trying": "Mirroring: `{{.FromAccount}}:ns::{{.FromNS}}:{{.FromPath}}` -> `{{.ToAccount}}:ns:{{.ToNS}}:{{.ToPath}}`",
  "dbx_file.copy_ref.mirror.progress.start": "Start mirroring",
  "dbx_file.copy_ref.mirror.progress.done": "Mirroring finished",
  "dbx_file.copy_ref.mirror.err.failed_mirror": "Could not mirror `{{.FromAccount}}:ns::{{.FromNS}}:{{.FromPath}}` -> `{{.ToAccount}}:ns:{{.ToNS}}:{{.ToPath}}`. Due to an error: {{.Error}}",
  "dbx_file.compare.progress.start": "Start comparison process",
  "dbx_file.compare.progress.done": "Comparison process finished. Found {{.DiffCount}} difference(s)",
  "report.common.flag.report_path": "Output file path of the report (default: STDOUT)",
  "report.common.flag.report_format": "Output file format (csv|json)",
  "report.common.flag.use_bom": "Use BOM",
  "report.common.flag.with_header": "Report with header (for csv)"
}