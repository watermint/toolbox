name: Build

on:
  push:
    branches: [ "main", "current" ]

jobs:
  xgo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ windows/amd64, linux/amd64, linux/arm64, darwin/arm64 ]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true

      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build-info
        run: go run tbx.go dev build info -fail-fast
        env:
          TOOLBOX_APPKEYS: '${{ secrets.TOOLBOX_APPKEYS }}'
          TOOLBOX_BUILDERKEY: '${{ secrets.TOOLBOX_BUILDERKEY }}'
          TOOLBOX_LICENSE_SALT: '${{ secrets.TOOLBOX_LICENSE_SALT }}'
          TOOLBOX_BUILD_TARGET: '${{ matrix.target }}'

      - name: build
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: 1.23
          dest: build
          prefix: tbx
          targets: ${{ matrix.target }}
          v: false
          x: false
          race: false
          ldflags: -s -w
          buildmode: default
          trimpath: true

      - name: test binary
        if: matrix.target == 'linux/amd64'
        run: |
          ./build/tbx-linux-amd64 dev test resources

      - name: package & ship
        run: |
          mkdir -p dist
          go run tbx.go dev build package -build-path build -dist-path dist -deploy-path /watermint-toolbox-build -experiment suppress_progress
        env:
          TOOLBOX_DEPLOY_TOKEN: '${{ secrets.TOOLBOX_DEPLOY_TOKEN }}'
          TOOLBOX_BUILD_TARGET: '${{ matrix.target }}'
